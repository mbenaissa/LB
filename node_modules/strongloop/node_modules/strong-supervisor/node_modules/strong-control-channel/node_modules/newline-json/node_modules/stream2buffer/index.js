module.exports = function streamToBuffer(stream, callback) {
  var done = false;
  var buffers = [];

  stream.on('data', function (data) {
    buffers.push(data);
  });

  stream.on('end', function () {
    if (done)
      return;

    done = true;

    var buff;

    try {
      buff = Buffer.concat(buffers);
    } catch (err) {
      if (stream._readableState) {
        if (stream._readableState.encoding === 'utf8' ||
            stream._readableState.encoding === 'ascii')
          buff = buffers.join('');

        if (stream._readableState.objectMode)
          buff = buffers;
      } else
        buff = buffers.join('');
    }

    callback(null, buff);
    buffers.length = 0;
  });

  stream.on('error', function (err) {
    done = true;
    buffers = null;
    callback(err);
  });
};
