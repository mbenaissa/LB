var register = require('../');

describe('flow', function () {
  var user;
  var badUser;
  beforeEach(function () {
    user = { name: 'foo'
           , email: 'test@strongloop.com'
           , password: 'password'
         //, baseUrl: 'https://staging.nodefly.com/ops/rest/'
           };

    badUser = { name: 'foo2'
              , email: 'test2@strongloop.com'
              , password: 'a'
            //, baseUrl: 'https://staging.nodefly.com/ops/rest/'
              };
  });

  it('should create user', function (next) {
    register.register(user, next);
  });

  it('should read user', function (next) {
    register.login(user, next);
  });

  it('should return Error when user exists', function(next) {
    register.register(user, function(err, res) {
      res.statusCode.should.equal(409);
      err.should.be.an.instanceof(Error);
      err.message.should.be.type('string');
      err.message.length.should.be.above(0);
      next();
    });
  });

  it('should destroy user', function (next) {
    register.cancel(user, next);
  });

  it('should reject short passwords', function (next) {
    register.register(badUser, function(err, res) {
      res.statusCode.should.equal(400);
      err.should.be.an.instanceof(Error);
      err.message.should.be.type('string');
      err.message.length.should.be.above(0);
      next();
    });
  });
});
