{
  "name": "duplex-pipe",
  "version": "0.0.2",
  "description": "a friendlier .pipe() for duplex streams that doesn't do cleanup on 'end'",
  "main": "index.js",
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/duplex-pipe.git"
  },
  "homepage": "https://github.com/substack/duplex-pipe",
  "keywords": [
    "duplex",
    "pipe",
    "node",
    "core",
    "stream"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# duplex-pipe\n\nA friendlier `.pipe()` for duplex streams that doesn't do cleanup on `'end'`, as\nper\n[this node core issue](https://github.com/joyent/node/pull/2524#issuecomment-8790281).\n\n# methods\n\nThis is exactly the same as node 0.8 core Stream except that duplex-pipe will\nnot do `dest.on('end', cleanup)` if `dest` is readable.\n\nPlus there is another hack to remove cleanup listeners when piped to.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install duplex-pipe\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "_id": "duplex-pipe@0.0.2",
  "dist": {
    "shasum": "726a49cba8af719f4ba3a014f188d9a1fe0c7c25",
    "tarball": "http://registry.npmjs.org/duplex-pipe/-/duplex-pipe-0.0.2.tgz"
  },
  "_from": "duplex-pipe@~0.0.1",
  "_npmVersion": "1.2.2",
  "_npmUser": {
    "name": "substack",
    "email": "mail@substack.net"
  },
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "directories": {},
  "_shasum": "726a49cba8af719f4ba3a014f188d9a1fe0c7c25",
  "_resolved": "https://registry.npmjs.org/duplex-pipe/-/duplex-pipe-0.0.2.tgz"
}
