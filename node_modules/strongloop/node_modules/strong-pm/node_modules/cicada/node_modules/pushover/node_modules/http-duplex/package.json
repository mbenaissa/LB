{
  "name": "http-duplex",
  "version": "0.0.2",
  "description": "turn (req,res) pairs into a single duplex stream",
  "main": "index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "inherits": "~1.0.0",
    "duplex-pipe": "~0.0.1"
  },
  "devDependencies": {
    "tap": "~0.3.0",
    "request": "~2.11.4"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/http-duplex.git"
  },
  "homepage": "https://github.com/substack/http-duplex",
  "keywords": [
    "duplex",
    "http",
    "server",
    "stream"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# http-duplex\n\nTurn (req,res) pairs into a single readable/writable stream.\n\n[![build status](https://secure.travis-ci.org/substack/http-duplex.png)](http://travis-ci.org/substack/http-duplex)\n\n# example\n\n# methods\n\n``` js\nvar httpDuplex = require('http-duplex')\n```\n\n## var dup = httpDuplex(req, res)\n\nReturn a new readable/writable duplex stream `dup` from the http request `req`\nand http response `res`.\n\n`dup` has all the same methods has both `req` and `res`, but on a single object.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install http-duplex\n```\n\n# license\n\nMIT\n",
  "_id": "http-duplex@0.0.2",
  "dist": {
    "shasum": "fe0260f16172de02491eae109f3af4a4a70460c0",
    "tarball": "http://registry.npmjs.org/http-duplex/-/http-duplex-0.0.2.tgz"
  },
  "_npmVersion": "1.1.59",
  "_npmUser": {
    "name": "substack",
    "email": "mail@substack.net"
  },
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "_shasum": "fe0260f16172de02491eae109f3af4a4a70460c0",
  "_from": "http-duplex@~0.0.2",
  "_resolved": "https://registry.npmjs.org/http-duplex/-/http-duplex-0.0.2.tgz"
}
