<?xml version="1.0"?>
<testsuites>
  <testsuite name="PhantomJS 1.9.7 (Mac OS X)" package="" timestamp="2014-07-16T16:08:31" id="0" hostname="raymond-1875.local" tests="85" errors="0" failures="0" time="0.126">
    <properties>
      <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.7 Safari/534.34"/>
    </properties>
    <testcase name="Require a model to include a property to be considered valid" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_validatesPresenceOf(properties___)"/>
    <testcase name="Require a property length to be within a specified range" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_validatesLengthOf(property, options)"/>
    <testcase name="Require a value for `property` to be in the specified array" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_validatesInclusionOf(property, options)"/>
    <testcase name="Require a value for `property` to not exist in the specified array" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_validatesExclusionOf(property, options)"/>
    <testcase name="Require a value for `property` to be a specific type of `Number`" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_validatesNumericalityOf(property, options)"/>
    <testcase name="Validate the model instance" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests myModel_isValid()"/>
    <testcase name="Asynchronously validate the model" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests myModel_isValid()"/>
    <testcase name="Create an instance of Model with given data and save to the attached data source" time="0.016" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_create([data], [callback])"/>
    <testcase name="Save an instance of a Model to the attached data source" time="0.006" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests model_save([options], [callback])"/>
    <testcase name="Save specified attributes to the attached data source" time="0.017" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests model_updateAttributes(data, [callback])"/>
    <testcase name="Update when record with id=data.id found, insert otherwise" time="0.007" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_upsert(data, callback)"/>
    <testcase name="Remove a model from the attached data source" time="0.016" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests model_destroy([callback])"/>
    <testcase name="Delete a model instance from the attached data source" time="0.009" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_deleteById(id, [callback])"/>
    <testcase name="Find an instance by id" time="0.007" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_findById(id, callback)"/>
    <testcase name="Query count of Model instances in data source" time="0.017" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model Tests Model_count([query], callback)"/>
    <testcase name="Ensure the value for `property` is unique" time="0.007" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model_validatesUniquenessOf(property, options)"/>
    <testcase name="Attach a model to a [DataSource](#data-source)" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).Model / PersistedModel Model_attachTo(dataSource)"/>
    <testcase name="Delete all Model instances from data source" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_destroyAll(callback)">
      <skipped/>
    </testcase>
    <testcase name="Call the method using HTTP / REST" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Example Remote Method">
      <skipped/>
    </testcase>
    <testcase name="Converts null result of findById to 404 Not Found" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Example Remote Method">
      <skipped/>
    </testcase>
    <testcase name="Run a function before a remote method is called by a client" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_beforeRemote(name, fn)">
      <skipped/>
    </testcase>
    <testcase name="Run a function after a remote method is called by a client" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_afterRemote(name, fn)">
      <skipped/>
    </testcase>
    <testcase name="The express ServerRequest object" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Remote Method invoking context ctx_req">
      <skipped/>
    </testcase>
    <testcase name="The express ServerResponse object" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Remote Method invoking context ctx_res">
      <skipped/>
    </testcase>
    <testcase name="correctly install before/after hooks" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods in compat mode">
      <skipped/>
    </testcase>
    <testcase name="Define a one to many relationship" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_hasMany(Model)">
      <skipped/>
    </testcase>
    <testcase name="Normalized properties passed in originally by loopback.createModel()" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_properties">
      <skipped/>
    </testcase>
    <testcase name="Create a new model by extending an existing model" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_extend()">
      <skipped/>
    </testcase>
    <testcase name="create isolated emitters for subclasses" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_extend() events">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) create">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) updateOrCreate">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) upsert">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) exists">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) findById">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) find">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) findOne">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) destroyById">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) deleteById">
      <skipped/>
    </testcase>
    <testcase name="should return WRITE" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) removeById">
      <skipped/>
    </testcase>
    <testcase name="should return READ" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) count">
      <skipped/>
    </testcase>
    <testcase name="should return EXECUTE" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkAccessTypeForMethod(remoteMethod) unkown-model-method">
      <skipped/>
    </testcase>
    <testcase name="Get the Change Model" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_getChangeModel()">
      <skipped/>
    </testcase>
    <testcase name="Get the Source Id" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_getSourceId(callback)">
      <skipped/>
    </testcase>
    <testcase name="Create a checkpoint" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model_checkpoint(callback)">
      <skipped/>
    </testcase>
    <testcase name="should return the subclass of ACL" time="0" classname="PhantomJS 1.9.7 (Mac OS X).Remote Methods Model__getACLModel()">
      <skipped/>
    </testcase>
    <testcase name="Get the distance to another `GeoPoint`" time="0.002" classname="PhantomJS 1.9.7 (Mac OS X).GeoPoint geoPoint_distanceTo(geoPoint, options)"/>
    <testcase name="Get the distance between two points" time="0" classname="PhantomJS 1.9.7 (Mac OS X).GeoPoint GeoPoint_distanceBetween(a, b, options)"/>
    <testcase name="Create from string" time="0" classname="PhantomJS 1.9.7 (Mac OS X).GeoPoint GeoPoint()"/>
    <testcase name="Serialize as string" time="0" classname="PhantomJS 1.9.7 (Mac OS X).GeoPoint GeoPoint()"/>
    <testcase name="Create from array" time="0" classname="PhantomJS 1.9.7 (Mac OS X).GeoPoint GeoPoint()"/>
    <testcase name="Create as Model property" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).GeoPoint GeoPoint()"/>
    <testcase name="exposes loopback as a property" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app"/>
    <testcase name="Expose a `Model` to remote clients" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(Model)"/>
    <testcase name="uses singlar name as app.remoteObjects() key" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(Model)"/>
    <testcase name="uses singular name as shared class name" time="0.006" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(Model)"/>
    <testcase name="registers existing models to app.models" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(Model)"/>
    <testcase name="updates REST API when a new model is added" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(Model)">
      <skipped/>
    </testcase>
    <testcase name="uses plural name as shared class name" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(Model) in compat mode"/>
    <testcase name="uses plural name as app.remoteObjects() key" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(Model) in compat mode"/>
    <testcase name="Sugar for defining a fully built model" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(name, config)"/>
    <testcase name="interprets extra first-level keys as options" time="0.002" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(name, config)"/>
    <testcase name="prefers config.options.key over config.key" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(name, config)"/>
    <testcase name="honors config.public options" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(name, config)"/>
    <testcase name="defaults config.public to be true" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(name, config)"/>
    <testcase name="attaches the model to a datasource" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_model(ModelCtor, config)"/>
    <testcase name="is unique per app instance" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_models"/>
    <testcase name="is unique per app instance" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_dataSources"/>
    <testcase name="looks up the connector in `app.connectors`" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_dataSource"/>
    <testcase name="starts http server" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app listen()">
      <skipped/>
    </testcase>
    <testcase name="updates port on &quot;listening&quot; event" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app listen()">
      <skipped/>
    </testcase>
    <testcase name="updates &quot;url&quot; on &quot;listening&quot; event" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app listen()">
      <skipped/>
    </testcase>
    <testcase name="forwards to http.Server.listen on more than one arg" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app listen()">
      <skipped/>
    </testcase>
    <testcase name="forwards to http.Server.listen when the single arg is not a function" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app listen()">
      <skipped/>
    </testcase>
    <testcase name="uses app config when no parameter is supplied" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app listen()">
      <skipped/>
    </testcase>
    <testcase name="should set app.isAuthEnabled to true" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app enableAuth">
      <skipped/>
    </testcase>
    <testcase name="should return the status of the application" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_get(&quot;/&quot;, loopback_status())">
      <skipped/>
    </testcase>
    <testcase name="is unique per app instance" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_connectors"/>
    <testcase name="includes Remote connector" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_connectors"/>
    <testcase name="includes Memory connector" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_connectors"/>
    <testcase name="adds the connector to the registry" time="0.001" classname="PhantomJS 1.9.7 (Mac OS X).app app_connector"/>
    <testcase name="adds a classified alias" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_connector"/>
    <testcase name="adds a camelized alias" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_connector"/>
    <testcase name="can be altered via `app.set(key, value)`" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_settings"/>
    <testcase name="can be read via `app.get(key)`" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_settings"/>
    <testcase name="is unique per app instance" time="0" classname="PhantomJS 1.9.7 (Mac OS X).app app_settings"/>
    <system-out><![CDATA[
]]></system-out>
    <system-err/>
  </testsuite>
</testsuites>
